{"ast":null,"code":"var _jsxFileName = \"/home/guquan/summer_school/2h1/h1/src/App.js\";\n// const Header = (cou) =>{\n//   return(\n//     <div>\n//     <p>\n//       {cou.course}\n//     </p>\n//     </div>\n//   )\n// }\n\n// const Content = (pa)=>{\n//   return(\n//     <div>\n//       <p>\n//         {pa.part1}{pa.ex1}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//     </div>\n//   )\n\n// }\n\n// const Total = (to)=>{\n//   return(\n//     <div>\n//       <p>\n//         Number of exercises {to.total}\n//       </p>\n//     </div>\n//   )\n// }\n\n// const App=()=>{\n//   const course = \"half stack application development\"\n//   const part1 = \" fundamentals of react\"\n//   const exercise1 = 10\n//   const part2 = \"using props to pass data\"\n//   const exercise2 = 7\n//   const part3 = \"State of a component\"\n//   const exercise3 = 14\n\n//   return(\n//     // <div>\n//     //   <h1>{course}</h1>\n//     //   <p>\n//     //     {part1}{exercise1}\n//     //   </p>\n//     //   <p>\n//     //     {part2}{exercise2}\n//     //   </p>\n//     //   <p>\n//     //     {part3}{exercise3}\n//     //   </p>\n//     //   <p>\n//     //     Number of exercises {exercise1 + exercise2 + exercise3}\n//     //   </p>\n//     // </div>\n//     <div>\n//       <Header course = {course}/>\n//       <Content part1 = {part1} part2 = {part2} part3 = {part3} ex1 = {exercise1} ex2 = {exercise2} ex3 = {exercise3}/>\n//       <Total total = {exercise1+exercise2+exercise3}/>\n//     </div>\n//   )\n// }\n\n// export default App;\n\n//2 a 从渲染集合到模块学习\n// console.log 注意在react中 console.log(\"props value is \", props)才是正确的\n\n//Protip: Visual Studio code snippets\n\n//通过VS Code，我们可以轻易创建 '片段'(快速生成常用的重复使用的代码部分)，此外也可以从插件市场下载！\n\n//Rendering Collections\n\n// const App = (props) =>{\n//     const {notes} = props\n\n//     return(\n//         <div>\n//             <h1>Notes</h1>\n\n//         <ul>\n\n//             <li>\n//                 {notes[0].content}\n//             </li>\n\n//             <li>\n//                 {notes[1].content}\n//             </li>\n\n//             <li>\n//                 {notes[2].content}\n//             </li>\n//         </ul>\n\n//         </div>\n//     )\n// }\n\n// export default App\n\n//每个笔记都包含它的文本内容和一个时间戳，以及一个用于标记该笔记是否被归类为重要的布尔值，还有一个唯一的ID\n//上面的例子有效的原因在于数组中刚好有三个笔记。\n//我们应该通过Map函数来改进上面代码！\n\n// const App = (props) =>{\n\n//     const {notes} = props\n//     return(\n//     <div>\n//         <h1>\n//             Notes\n//         </h1>\n//         <ul>\n//         {notes.map(note => \n\n//         <li key = {note.id}>\n//             {note.content}\n//         </li>\n\n//         )}\n//         </ul>\n\n//     </div>\n//     )\n// }\n\n// export default App\n\n//Anti-pattern Array indexes as keys\n//我们使用数组索引作为键值来是控制台中的错误信息消失。\n//通过箱Map方法的回调函数传递第二个参数，即可获得索引\n\n// const App = ({notes}) =>{\n//     return(\n//         <div>\n//             <ul>\n//                 {notes.map((note,i) =>\n//                 <li key = {i}>\n//                         {note.content}\n//                 </li>\n\n//                 )}\n//             </ul>\n//         </div>\n//     )\n\n// }\n// export default App\n\n//下面我们Refactiring\n\n// const Note = ({note}) =>{\n//     return (\n//         <li>\n//             {note.content}\n//         </li>\n//     )\n// }\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n// import Note  from './Node'\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n//2.1\n//2.1\n\nimport Course from \"./components/Course\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Course, {\n    course: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 12\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Course","jsxDEV","_jsxDEV","App","course","id","name","parts","exercises","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/guquan/summer_school/2h1/h1/src/App.js"],"sourcesContent":["// const Header = (cou) =>{\n//   return(\n//     <div>\n//     <p>\n//       {cou.course}\n//     </p>\n//     </div>\n//   )\n// }\n\n// const Content = (pa)=>{\n//   return(\n//     <div>\n//       <p>\n//         {pa.part1}{pa.ex1}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//     </div>\n//   )\n\n// }\n\n// const Total = (to)=>{\n//   return(\n//     <div>\n//       <p>\n//         Number of exercises {to.total}\n//       </p>\n//     </div>\n//   )\n// }\n\n// const App=()=>{\n//   const course = \"half stack application development\"\n//   const part1 = \" fundamentals of react\"\n//   const exercise1 = 10\n//   const part2 = \"using props to pass data\"\n//   const exercise2 = 7\n//   const part3 = \"State of a component\"\n//   const exercise3 = 14\n\n//   return(\n//     // <div>\n//     //   <h1>{course}</h1>\n//     //   <p>\n//     //     {part1}{exercise1}\n//     //   </p>\n//     //   <p>\n//     //     {part2}{exercise2}\n//     //   </p>\n//     //   <p>\n//     //     {part3}{exercise3}\n//     //   </p>\n//     //   <p>\n//     //     Number of exercises {exercise1 + exercise2 + exercise3}\n//     //   </p>\n//     // </div>\n//     <div>\n//       <Header course = {course}/>\n//       <Content part1 = {part1} part2 = {part2} part3 = {part3} ex1 = {exercise1} ex2 = {exercise2} ex3 = {exercise3}/>\n//       <Total total = {exercise1+exercise2+exercise3}/>\n//     </div>\n//   )\n// }\n\n// export default App;\n\n//2 a 从渲染集合到模块学习\n// console.log 注意在react中 console.log(\"props value is \", props)才是正确的\n\n//Protip: Visual Studio code snippets\n\n//通过VS Code，我们可以轻易创建 '片段'(快速生成常用的重复使用的代码部分)，此外也可以从插件市场下载！\n\n//Rendering Collections\n\n// const App = (props) =>{\n//     const {notes} = props\n\n//     return(\n//         <div>\n//             <h1>Notes</h1>\n\n//         <ul>\n\n       \n//             <li>\n//                 {notes[0].content}\n//             </li>\n\n//             <li>\n//                 {notes[1].content}\n//             </li>\n\n//             <li>\n//                 {notes[2].content}\n//             </li>\n//         </ul>\n\n//         </div>\n//     )\n// }\n\n// export default App\n\n//每个笔记都包含它的文本内容和一个时间戳，以及一个用于标记该笔记是否被归类为重要的布尔值，还有一个唯一的ID\n//上面的例子有效的原因在于数组中刚好有三个笔记。\n//我们应该通过Map函数来改进上面代码！\n\n\n// const App = (props) =>{\n\n\n//     const {notes} = props\n//     return(\n//     <div>\n//         <h1>\n//             Notes\n//         </h1>\n//         <ul>\n//         {notes.map(note => \n        \n//         <li key = {note.id}>\n//             {note.content}\n//         </li>\n\n//         )}\n//         </ul>\n\n\n//     </div>\n//     )\n// }\n\n// export default App\n\n\n//Anti-pattern Array indexes as keys\n//我们使用数组索引作为键值来是控制台中的错误信息消失。\n//通过箱Map方法的回调函数传递第二个参数，即可获得索引\n\n// const App = ({notes}) =>{\n//     return(\n//         <div>\n//             <ul>\n//                 {notes.map((note,i) =>\n//                 <li key = {i}>\n//                         {note.content}\n//                 </li>\n\n//                 )}\n//             </ul>\n//         </div>\n//     )\n\n// }\n// export default App\n\n//下面我们Refactiring\n\n// const Note = ({note}) =>{\n//     return (\n//         <li>\n//             {note.content}\n//         </li>\n//     )\n// }\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n\n// import Note  from './Node'\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n\n\n//2.1\n//2.1\n\nimport Course from \"./components/Course\"\n  \nconst App = () => {\n    const course = {\n      id: 1,\n      name: 'Half Stack application development',\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        }\n      ]\n    }\n  \n    return <Course course={course} />\n  }\n  \n  export default App"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA,OAAOA,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,MAAMC,MAAM,GAAG;IACbC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,oCAAoC;IAC1CC,KAAK,EAAE,CACL;MACED,IAAI,EAAE,uBAAuB;MAC7BE,SAAS,EAAE,EAAE;MACbH,EAAE,EAAE;IACN,CAAC,EACD;MACEC,IAAI,EAAE,0BAA0B;MAChCE,SAAS,EAAE,CAAC;MACZH,EAAE,EAAE;IACN,CAAC,EACD;MACEC,IAAI,EAAE,sBAAsB;MAC5BE,SAAS,EAAE,EAAE;MACbH,EAAE,EAAE;IACN,CAAC;EAEL,CAAC;EAED,oBAAOH,OAAA,CAACF,MAAM;IAACI,MAAM,EAAEA;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAAAC,EAAA,GAxBGV,GAAG;AA0BP,eAAeA,GAAG;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}