{"ast":null,"code":"var _jsxFileName = \"/home/guquan/summer_school/2h1/h16/src/App.js\",\n  _s = $RefreshSig$();\n// const Header = (cou) =>{\n//   return(\n//     <div>\n//     <p>\n//       {cou.course}\n//     </p>\n//     </div>\n//   )\n// }\n\n// const Content = (pa)=>{\n//   return(\n//     <div>\n//       <p>\n//         {pa.part1}{pa.ex1}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//     </div>\n//   )\n\n// }\n\n// const Total = (to)=>{\n//   return(\n//     <div>\n//       <p>\n//         Number of exercises {to.total}\n//       </p>\n//     </div>\n//   )\n// }\n\n// const App=()=>{\n//   const course = \"half stack application development\"\n//   const part1 = \" fundamentals of react\"\n//   const exercise1 = 10\n//   const part2 = \"using props to pass data\"\n//   const exercise2 = 7\n//   const part3 = \"State of a component\"\n//   const exercise3 = 14\n\n//   return(\n//     // <div>\n//     //   <h1>{course}</h1>\n//     //   <p>\n//     //     {part1}{exercise1}\n//     //   </p>\n//     //   <p>\n//     //     {part2}{exercise2}\n//     //   </p>\n//     //   <p>\n//     //     {part3}{exercise3}\n//     //   </p>\n//     //   <p>\n//     //     Number of exercises {exercise1 + exercise2 + exercise3}\n//     //   </p>\n//     // </div>\n//     <div>\n//       <Header course = {course}/>\n//       <Content part1 = {part1} part2 = {part2} part3 = {part3} ex1 = {exercise1} ex2 = {exercise2} ex3 = {exercise3}/>\n//       <Total total = {exercise1+exercise2+exercise3}/>\n//     </div>\n//   )\n// }\n\n// export default App;\n\n//2 a 从渲染集合到模块学习\n// console.log 注意在react中 console.log(\"props value is \", props)才是正确的\n\n//Protip: Visual Studio code snippets\n\n//通过VS Code，我们可以轻易创建 '片段'(快速生成常用的重复使用的代码部分)，此外也可以从插件市场下载！\n\n//Rendering Collections\n\n// const App = (props) =>{\n//     const {notes} = props\n\n//     return(\n//         <div>\n//             <h1>Notes</h1>\n\n//         <ul>\n\n//             <li>\n//                 {notes[0].content}\n//             </li>\n\n//             <li>\n//                 {notes[1].content}\n//             </li>\n\n//             <li>\n//                 {notes[2].content}\n//             </li>\n//         </ul>\n\n//         </div>\n//     )\n// }\n\n// export default App\n\n//每个笔记都包含它的文本内容和一个时间戳，以及一个用于标记该笔记是否被归类为重要的布尔值，还有一个唯一的ID\n//上面的例子有效的原因在于数组中刚好有三个笔记。\n//我们应该通过Map函数来改进上面代码！\n\n// const App = (props) =>{\n\n//     const {notes} = props\n//     return(\n//     <div>\n//         <h1>\n//             Notes\n//         </h1>\n//         <ul>\n//         {notes.map(note => \n\n//         <li key = {note.id}>\n//             {note.content}\n//         </li>\n\n//         )}\n//         </ul>\n\n//     </div>\n//     )\n// }\n\n// export default App\n\n//Anti-pattern Array indexes as keys\n//我们使用数组索引作为键值来是控制台中的错误信息消失。\n//通过箱Map方法的回调函数传递第二个参数，即可获得索引\n\n// const App = ({notes}) =>{\n//     return(\n//         <div>\n//             <ul>\n//                 {notes.map((note,i) =>\n//                 <li key = {i}>\n//                         {note.content}\n//                 </li>\n\n//                 )}\n//             </ul>\n//         </div>\n//     )\n\n// }\n// export default App\n\n//下面我们Refactiring\n\n// const Note = ({note}) =>{\n//     return (\n//         <li>\n//             {note.content}\n//         </li>\n//     )\n// }\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n// import Note  from './Node'\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n//2.1\n//2.1\n\n// import Course from \"./components/Course\"\n\n// const App = () => {\n//     const course = {\n//       id: 1,\n//       name: 'Half Stack application development',\n//       parts: [\n//         {\n//           name: 'Fundamentals of React',\n//           exercises: 10,\n//           id: 1\n//         },\n//         {\n//           name: 'Using props to pass data',\n//           exercises: 7,\n//           id: 2\n//         },\n//         {\n//           name: 'State of a component',\n//           exercises: 14,\n//           id: 3\n//         }\n//       ]\n//     }\n\n//     return <Course course={course} />\n//   }\n\n//   export default App\n\n//d 在服务器中获取数据\n\n//2.15\n//REST\n//在rest中，我们把单个数据对象成为资源。每个资源抖音一个与其相对应的唯一地址(URL)\n//根据json-server使用的一般惯例\n//eg:我们可以通过资源URL http://xxx.xxx.xxx/notes/3找到一个单独的笔记。其中3是ID。\n//除此之外，notes指向一个包含全部笔记的资源的集合。\n\n//咨议员是从服务器中获取\n//而根据REST惯例 通过向notes URL发出HTTP POST请求来创建一个来存储笔记的新资源\n\n//我们需要注意数据格式为json格式，此外还需要注意content-type请求头，值为application/json\n\n//Sending data to the server\n//让我们对负责创建一个新笔记的事件处理程序进行修改:\n// import { useState, useEffect } from 'react'\n// import axios from 'axios'\n// import Note from './components/Note'\n\n// const App = () => {\n//   const [notes, setNotes] = useState([])\n//   const [newNote, setNewNote] = useState('')\n//   const [showAll, setShowAll] = useState(true)\n\n//   //获得从json服务器中获取数据\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:3001/notes')\n//       .then(response => {\n//         setNotes(response.data)\n//       })\n//   }, [])\n\n// //添加笔记\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       important: Math.random() > 0.5,\n//     }\n// //这个是重点，因为我们下面需要添加新的数据！\n//     axios\n//       .post('http://localhost:3001/notes', noteObject)\n//       .then(response => {\n//         setNotes(notes.concat(response.data))\n//         setNewNote('')\n//       })\n//   }\n\n//   //老样子，实现实时输入的功能\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value)\n//   }\n\n//   //过滤是否为重要的条目\n//   const notesToShow = showAll\n//     ? notes\n//     : notes.filter(note => note.important)\n\n//   //\n//   const toggleImportanceOf = (id) => {\n//     console.log('importance of ' + id + ' needs to be toggled')\n//     //我们可以通过访问不太的URL来对不同ID的笔记数据进行访问\n//     //甚至可以通过PUT进行替换，用PATCH更改某些属性。\n\n//     const url = `http://localhost:3001/notes/${id}`\n//     const note = notes.find(n=>n.id===id)\n\n//     const changeNote = {...note, important: !note.important}\n\n// //...note 创建了一个新的对象，并且复制了note对象的全部属性。\n// //当我们给...note创建的新对象添加属性时。新对象的important变为原来数的相反值\n\n// //除此之外changeNote是一个浅层拷贝，新对象的值与旧对象的相同。\n// //如果旧对象的值本身是对象，\n//     axios.put(url,changeNote).then(response =>{\n\n//         setNotes(notes.map(note=> note.id !== id ?note:response.data))\n\n//     })\n//     .catch(error =>{\n//         alert(\n//             `the note '${note.content}' was already deleted from server` \n//         )\n//         setNotes(notes.filter(n => n.id !== id))\n//     })\n\n//   }\n\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div> \n//       <ul>\n\n//         <ul>\n//           {notesToShow.map(note => \n//             <Note key={note.id} note={note} \n\n//               toggleImportance = {() => toggleImportanceOf(note.id)}\n//   //注意这里是为了对不同id的数据进行修改！！！          \n//             />\n//           )}\n//         </ul>\n\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input value={newNote} onChange={handleNoteChange} />\n//         <button type=\"submit\">save</button>\n//       </form>\n//     </div>\n//   )\n// }\n\n// export default App\n//我们通常用setNotes函数将后端数据返回的新数据添加到状态列表中。\n//然后重置笔记创建的表单\n//注意:concat方法不改变组件的原来的状态，而是创建一个新副本\n\n//Changing the importance of notes\n//下面技工啊为每个笔记添加一个按钮，使得我们可以切换笔记的重要性\n\n//对于Note属性\n\n// const Note = ({ note, toggleImportance }) => {\n//   const label = note.important\n//     ? 'make not important' : 'make important'\n\n//   return (\n//     <li>\n//       {note.content}\n//       <button onClick={toggleImportance}>{label}</button>\n//     </li>\n//   )\n// }\n\n//Extracting communication with the backend into a separate module\n\n//首先创建一个src/serviecs目录\n\n//eg:\n\n// import { useEffect, useState } from \"react\";\n// import noteService from \"./services/notes\";\n\n// const App = () =>{\n\n//     const [notes,setNotes] = useState([])\n//     const [newNote,setNewNote] = useState(\"\")\n//     const [showAll,setShowAll] = useState(true)\n\n//     const hook  = () =>{\n//         noteService.get_all().then(response =>\n//             setNotes(response.data)\n//         )\n//     }\n\n//     useEffect(hook,[])\n\n//     const toggleImportanceOf = (id) =>{\n//         const note = notes.find(n => n.id === id)\n//         const changeNote = { ...note, important:   !note.important}\n\n//         noteService\n//                 .update(id, changedNote)\n//                 .then(\n//                     response =>{\n//                         setNotes(notes.map(note => note.id !== id ? note : response.data))\n//                     }\n//                 )\n\n//     }\n\n// }\n\n//2.15 Phonebook step 7\n//题目:\n//目前，添加到电话簿的号码没有被保存到后端服务器，修复这种情况！\n\n// import { useEffect, useState } from \"react\";\n// import Display from \"./components/Display.js\"\n// import axios from \"axios\";\n\n// const App = () =>{\n//   const [persons, setPersons] = useState ([])\n\n//   const [newName,setNewName] = useState(\"\")\n\n//   const [new_number, set_new_number] =useState(\"\")\n\n//   const [search_content, set_new_search] = useState(\"\")\n\n//   const url = \"http://localhost:3001/persons\"\n\n// //先初始化！\n\n// const hook = () =>{\n//     axios.get(url).then\n//     (\n//         response => {\n\n//             setPersons(response.data)\n\n//         }\n\n//     )\n\n// }\n\n// useEffect(hook,[])\n\n// //下面添加賬戶内容！\n\n//   const sub_eve = (event)=>{\n\n//     event.preventDefault()\n\n//     const  middle_array = persons.map(person => Object.values(person))\n\n//     for(let i = 0; i<persons.length;i++){\n//     if (middle_array[i][0] === newName){\n//       alert( newName + \"  is already added to phonebook\")\n//       setNewName(\" \")\n//       set_new_number(\" \")\n//       return 0\n//       }\n//     }\n\n//     const new_value = {\n//         id : persons.length+1,\n//       name : newName,\n//       number : new_number\n//     }\n\n//     // setPersons(persons.concat(new_value))\n//     axios.post(url,new_value).then(\n//         response =>\n//         {\n//             setPersons(persons.concat(response.data))\n//         }\n//     )\n\n//     setNewName(\" \")\n//     set_new_number(\" \")\n\n//   }\n\n//   const search_everything  = (event) =>{\n\n//     set_new_search(event.target.value)\n\n//   }\n\n//   const content = persons.filter((person) => person.name.toLowerCase().includes(search_content.toLowerCase()))\n\n//   const change_holder = (event) =>{\n\n//     console.log(\"1111\", event.target.value)\n\n//     setNewName(event.target.value)\n\n//   }\n\n//   const change_number = (event) =>{\n//     console.log(event.target.value)\n//     set_new_number(event.target.value)\n//   }\n\n//   return(\n//     <div>\n//       <h2>\n//         Phonebook\n//       </h2>\n\n//       <form onSubmit={sub_eve}>\n//         <div>\n//           name:    <input  onChange={change_holder}/>\n//         </div>\n\n//         <div>\n//           number:  <input onChange={change_number}/>\n//         </div>\n\n//         <div>\n//           <button type = \"submit\">\n//               add\n//           </button>\n//         </div>\n\n//       </form>\n\n//       <div>\n//           Search: <input onChange={search_everything}/>\n//       </div>\n\n//       <h2>\n//         Numbers\n//       </h2>\n\n//       <div>\n\n//       {content.map((person,id) => <Display key = {id} name = {person.name} number = {person.number}/>)}\n\n//       </div>\n//     </div>\n//   )\n\n// }\n// export default App\n\nimport { useState, useEffect } from \"react\";\nimport Display from \"./components/Display.js\";\nimport axios from \"axios\";\nimport person_function1 from \"./services/person_function1.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = ({\n  persons,\n  search_content,\n  set_new_search\n}) => {\n  const search_everything = event => {\n    set_new_search(event.target.value);\n  };\n  const content = persons.filter(person => person.name.toLowerCase().includes(search_content.toLowerCase()));\n  const empty_content = [];\n  const final_content = search_content === \"\" ? empty_content : content;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Search: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: search_everything\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this), final_content.map((person, id) => /*#__PURE__*/_jsxDEV(Display, {\n      name: person.name,\n      number: person.number\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 653,\n    columnNumber: 5\n  }, this);\n};\n_c = Filter;\nconst PersonForm = ({\n  persons,\n  setPersons,\n  newName,\n  setNewName,\n  new_number,\n  set_new_number,\n  search_content\n}) => {\n  const sub_eve = event => {\n    event.preventDefault();\n    const middle_array = persons.map(person => Object.values(person));\n    const copy_name = newName;\n    for (let i = 0; i < persons.length; i++) {\n      if (middle_array[i][0] === copy_name) {\n        alert(newName + \"  is already added to phonebook\");\n        setNewName(\" \");\n        set_new_number(\" \");\n        return 0;\n      }\n    }\n    const new_value = {\n      name: newName,\n      number: new_number\n    };\n    person_function1.create(new_value).then(return_person => {\n      setPersons(persons.concat(return_person));\n      setNewName(\" \");\n      set_new_number(\" \");\n    });\n\n    // setNewName(\" \")\n    // set_new_number(\" \")\n  };\n  const change_holder = event => {\n    console.log(\"1111\", event.target.value);\n    setNewName(event.target.value);\n  };\n  const change_number = event => {\n    console.log(event.target.value);\n    set_new_number(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sub_eve,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name:    \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change_holder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number:  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: change_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 724,\n    columnNumber: 7\n  }, this);\n};\n_c2 = PersonForm;\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([{\n    name: \"Arto Helllas\",\n    number: \"0352-5103510\",\n    id: 1\n  }, {\n    name: \"LI Hua\",\n    number: \"+86-13992381274\",\n    id: 2\n  }]);\n  const [newName, setNewName] = useState(\"\");\n  const [new_number, set_new_number] = useState(\"\");\n  const [search_content, set_new_search] = useState(\"\");\n  useEffect(() => {\n    person_function1.get_all().then(initial_person => {\n      setPersons(initial_person);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Note: please enter a name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      persons: persons,\n      search_content: search_content,\n      set_new_search: set_new_search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PersonForm, {\n        persons: persons,\n        setPersons: setPersons,\n        newName: newName,\n        setNewName: setNewName,\n        new_number: new_number,\n        set_new_number: set_new_number,\n        search_content: search_content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total person:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 7\n    }, this), persons.map((person, id) => /*#__PURE__*/_jsxDEV(Display, {\n      name: person.name,\n      number: person.number\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 34\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 773,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UpxnUapLCMvPc2w2eRExdujdfMs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"PersonForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","useEffect","Display","axios","person_function1","jsxDEV","_jsxDEV","Filter","persons","search_content","set_new_search","search_everything","event","target","value","content","filter","person","name","toLowerCase","includes","empty_content","final_content","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id","number","_c","PersonForm","setPersons","newName","setNewName","new_number","set_new_number","sub_eve","preventDefault","middle_array","Object","values","copy_name","i","length","alert","new_value","create","then","return_person","concat","change_holder","console","log","change_number","onSubmit","type","_c2","App","_s","get_all","initial_person","_c3","$RefreshReg$"],"sources":["/home/guquan/summer_school/2h1/h16/src/App.js"],"sourcesContent":["// const Header = (cou) =>{\n//   return(\n//     <div>\n//     <p>\n//       {cou.course}\n//     </p>\n//     </div>\n//   )\n// }\n\n// const Content = (pa)=>{\n//   return(\n//     <div>\n//       <p>\n//         {pa.part1}{pa.ex1}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//       <p>\n//         {pa.part2}{pa.ex2}\n//       </p>\n//     </div>\n//   )\n\n// }\n\n// const Total = (to)=>{\n//   return(\n//     <div>\n//       <p>\n//         Number of exercises {to.total}\n//       </p>\n//     </div>\n//   )\n// }\n\n// const App=()=>{\n//   const course = \"half stack application development\"\n//   const part1 = \" fundamentals of react\"\n//   const exercise1 = 10\n//   const part2 = \"using props to pass data\"\n//   const exercise2 = 7\n//   const part3 = \"State of a component\"\n//   const exercise3 = 14\n\n//   return(\n//     // <div>\n//     //   <h1>{course}</h1>\n//     //   <p>\n//     //     {part1}{exercise1}\n//     //   </p>\n//     //   <p>\n//     //     {part2}{exercise2}\n//     //   </p>\n//     //   <p>\n//     //     {part3}{exercise3}\n//     //   </p>\n//     //   <p>\n//     //     Number of exercises {exercise1 + exercise2 + exercise3}\n//     //   </p>\n//     // </div>\n//     <div>\n//       <Header course = {course}/>\n//       <Content part1 = {part1} part2 = {part2} part3 = {part3} ex1 = {exercise1} ex2 = {exercise2} ex3 = {exercise3}/>\n//       <Total total = {exercise1+exercise2+exercise3}/>\n//     </div>\n//   )\n// }\n\n// export default App;\n\n//2 a 从渲染集合到模块学习\n// console.log 注意在react中 console.log(\"props value is \", props)才是正确的\n\n//Protip: Visual Studio code snippets\n\n//通过VS Code，我们可以轻易创建 '片段'(快速生成常用的重复使用的代码部分)，此外也可以从插件市场下载！\n\n//Rendering Collections\n\n// const App = (props) =>{\n//     const {notes} = props\n\n//     return(\n//         <div>\n//             <h1>Notes</h1>\n\n//         <ul>\n\n       \n//             <li>\n//                 {notes[0].content}\n//             </li>\n\n//             <li>\n//                 {notes[1].content}\n//             </li>\n\n//             <li>\n//                 {notes[2].content}\n//             </li>\n//         </ul>\n\n//         </div>\n//     )\n// }\n\n// export default App\n\n//每个笔记都包含它的文本内容和一个时间戳，以及一个用于标记该笔记是否被归类为重要的布尔值，还有一个唯一的ID\n//上面的例子有效的原因在于数组中刚好有三个笔记。\n//我们应该通过Map函数来改进上面代码！\n\n\n// const App = (props) =>{\n\n\n//     const {notes} = props\n//     return(\n//     <div>\n//         <h1>\n//             Notes\n//         </h1>\n//         <ul>\n//         {notes.map(note => \n        \n//         <li key = {note.id}>\n//             {note.content}\n//         </li>\n\n//         )}\n//         </ul>\n\n\n//     </div>\n//     )\n// }\n\n// export default App\n\n\n//Anti-pattern Array indexes as keys\n//我们使用数组索引作为键值来是控制台中的错误信息消失。\n//通过箱Map方法的回调函数传递第二个参数，即可获得索引\n\n// const App = ({notes}) =>{\n//     return(\n//         <div>\n//             <ul>\n//                 {notes.map((note,i) =>\n//                 <li key = {i}>\n//                         {note.content}\n//                 </li>\n\n//                 )}\n//             </ul>\n//         </div>\n//     )\n\n// }\n// export default App\n\n//下面我们Refactiring\n\n// const Note = ({note}) =>{\n//     return (\n//         <li>\n//             {note.content}\n//         </li>\n//     )\n// }\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n\n// import Note  from './Node'\n\n// const App = ({notes}) =>{\n//     return(\n// <div>\n//     <h1>\n//         Notes\n//     </h1>\n\n\n//     <ul>\n//         {\n//             notes.map(note => <Note key = {note.id} note = {note}/>)\n//         }\n//     </ul>\n// </div>\n//     )\n// }\n\n// export default App\n\n\n\n//2.1\n//2.1\n\n// import Course from \"./components/Course\"\n  \n// const App = () => {\n//     const course = {\n//       id: 1,\n//       name: 'Half Stack application development',\n//       parts: [\n//         {\n//           name: 'Fundamentals of React',\n//           exercises: 10,\n//           id: 1\n//         },\n//         {\n//           name: 'Using props to pass data',\n//           exercises: 7,\n//           id: 2\n//         },\n//         {\n//           name: 'State of a component',\n//           exercises: 14,\n//           id: 3\n//         }\n//       ]\n//     }\n  \n//     return <Course course={course} />\n//   }\n  \n//   export default App\n\n\n\n//d 在服务器中获取数据\n\n//2.15\n//REST\n//在rest中，我们把单个数据对象成为资源。每个资源抖音一个与其相对应的唯一地址(URL)\n//根据json-server使用的一般惯例\n//eg:我们可以通过资源URL http://xxx.xxx.xxx/notes/3找到一个单独的笔记。其中3是ID。\n//除此之外，notes指向一个包含全部笔记的资源的集合。\n\n\n//咨议员是从服务器中获取\n//而根据REST惯例 通过向notes URL发出HTTP POST请求来创建一个来存储笔记的新资源\n\n//我们需要注意数据格式为json格式，此外还需要注意content-type请求头，值为application/json\n\n\n\n//Sending data to the server\n//让我们对负责创建一个新笔记的事件处理程序进行修改:\n// import { useState, useEffect } from 'react'\n// import axios from 'axios'\n// import Note from './components/Note'\n\n// const App = () => {\n//   const [notes, setNotes] = useState([])\n//   const [newNote, setNewNote] = useState('')\n//   const [showAll, setShowAll] = useState(true)\n\n\n\n//   //获得从json服务器中获取数据\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:3001/notes')\n//       .then(response => {\n//         setNotes(response.data)\n//       })\n//   }, [])\n\n\n// //添加笔记\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       important: Math.random() > 0.5,\n//     }\n// //这个是重点，因为我们下面需要添加新的数据！\n//     axios\n//       .post('http://localhost:3001/notes', noteObject)\n//       .then(response => {\n//         setNotes(notes.concat(response.data))\n//         setNewNote('')\n//       })\n//   }\n\n//   //老样子，实现实时输入的功能\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value)\n//   }\n\n//   //过滤是否为重要的条目\n//   const notesToShow = showAll\n//     ? notes\n//     : notes.filter(note => note.important)\n\n\n\n\n\n//   //\n//   const toggleImportanceOf = (id) => {\n//     console.log('importance of ' + id + ' needs to be toggled')\n//     //我们可以通过访问不太的URL来对不同ID的笔记数据进行访问\n//     //甚至可以通过PUT进行替换，用PATCH更改某些属性。\n\n//     const url = `http://localhost:3001/notes/${id}`\n//     const note = notes.find(n=>n.id===id)\n  \n//     const changeNote = {...note, important: !note.important}\n\n// //...note 创建了一个新的对象，并且复制了note对象的全部属性。\n// //当我们给...note创建的新对象添加属性时。新对象的important变为原来数的相反值\n\n\n\n\n// //除此之外changeNote是一个浅层拷贝，新对象的值与旧对象的相同。\n// //如果旧对象的值本身是对象，\n//     axios.put(url,changeNote).then(response =>{\n\n//         setNotes(notes.map(note=> note.id !== id ?note:response.data))\n\n\n\n//     })\n//     .catch(error =>{\n//         alert(\n//             `the note '${note.content}' was already deleted from server` \n//         )\n//         setNotes(notes.filter(n => n.id !== id))\n//     })\n  \n  \n  \n//   }\n\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div> \n//       <ul>\n\n\n//         <ul>\n//           {notesToShow.map(note => \n//             <Note key={note.id} note={note} \n            \n//               toggleImportance = {() => toggleImportanceOf(note.id)}\n//   //注意这里是为了对不同id的数据进行修改！！！          \n//             />\n//           )}\n//         </ul>\n\n\n\n\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input value={newNote} onChange={handleNoteChange} />\n//         <button type=\"submit\">save</button>\n//       </form>\n//     </div>\n//   )\n// }\n\n// export default App\n//我们通常用setNotes函数将后端数据返回的新数据添加到状态列表中。\n//然后重置笔记创建的表单\n//注意:concat方法不改变组件的原来的状态，而是创建一个新副本\n\n\n//Changing the importance of notes\n//下面技工啊为每个笔记添加一个按钮，使得我们可以切换笔记的重要性\n\n//对于Note属性\n\n// const Note = ({ note, toggleImportance }) => {\n//   const label = note.important\n//     ? 'make not important' : 'make important'\n\n//   return (\n//     <li>\n//       {note.content}\n//       <button onClick={toggleImportance}>{label}</button>\n//     </li>\n//   )\n// }\n\n\n\n//Extracting communication with the backend into a separate module\n\n//首先创建一个src/serviecs目录\n\n//eg:\n\n// import { useEffect, useState } from \"react\";\n// import noteService from \"./services/notes\";\n\n\n// const App = () =>{\n\n//     const [notes,setNotes] = useState([])\n//     const [newNote,setNewNote] = useState(\"\")\n//     const [showAll,setShowAll] = useState(true)\n\n//     const hook  = () =>{\n//         noteService.get_all().then(response =>\n//             setNotes(response.data)\n//         )\n//     }\n\n//     useEffect(hook,[])\n\n\n\n//     const toggleImportanceOf = (id) =>{\n//         const note = notes.find(n => n.id === id)\n//         const changeNote = { ...note, important:   !note.important}\n\n//         noteService\n//                 .update(id, changedNote)\n//                 .then(\n//                     response =>{\n//                         setNotes(notes.map(note => note.id !== id ? note : response.data))\n//                     }\n//                 )\n\n//     }\n\n\n\n\n\n\n// }\n\n\n\n\n//2.15 Phonebook step 7\n//题目:\n//目前，添加到电话簿的号码没有被保存到后端服务器，修复这种情况！\n\n\n// import { useEffect, useState } from \"react\";\n// import Display from \"./components/Display.js\"\n// import axios from \"axios\";\n\n// const App = () =>{\n//   const [persons, setPersons] = useState ([])\n\n//   const [newName,setNewName] = useState(\"\")\n\n//   const [new_number, set_new_number] =useState(\"\")\n\n\n//   const [search_content, set_new_search] = useState(\"\")\n\n\n//   const url = \"http://localhost:3001/persons\"\n\n\n// //先初始化！\n\n// const hook = () =>{\n//     axios.get(url).then\n//     (\n//         response => {\n\n//             setPersons(response.data)\n\n\n\n//         }\n\n//     )\n\n// }\n\n// useEffect(hook,[])\n\n\n// //下面添加賬戶内容！\n\n\n\n\n//   const sub_eve = (event)=>{\n\n//     event.preventDefault()\n\n\n//     const  middle_array = persons.map(person => Object.values(person))\n\n//     for(let i = 0; i<persons.length;i++){\n//     if (middle_array[i][0] === newName){\n//       alert( newName + \"  is already added to phonebook\")\n//       setNewName(\" \")\n//       set_new_number(\" \")\n//       return 0\n//       }\n//     }\n\n//     const new_value = {\n//         id : persons.length+1,\n//       name : newName,\n//       number : new_number\n//     }\n\n//     // setPersons(persons.concat(new_value))\n//     axios.post(url,new_value).then(\n//         response =>\n//         {\n//             setPersons(persons.concat(response.data))\n//         }\n//     )\n\n//     setNewName(\" \")\n//     set_new_number(\" \")\n\n//   }\n\n\n//   const search_everything  = (event) =>{\n\n//     set_new_search(event.target.value)\n\n//   }\n\n\n\n//   const content = persons.filter((person) => person.name.toLowerCase().includes(search_content.toLowerCase()))\n\n\n//   const change_holder = (event) =>{\n\n//     console.log(\"1111\", event.target.value)\n\n//     setNewName(event.target.value)\n\n//   }\n\n//   const change_number = (event) =>{\n//     console.log(event.target.value)\n//     set_new_number(event.target.value)\n//   }\n\n//   return(\n//     <div>\n//       <h2>\n//         Phonebook\n//       </h2>\n\n\n//       <form onSubmit={sub_eve}>\n//         <div>\n//           name:    <input  onChange={change_holder}/>\n//         </div>\n\n//         <div>\n//           number:  <input onChange={change_number}/>\n//         </div>\n\n\n\n//         <div>\n//           <button type = \"submit\">\n//               add\n//           </button>\n//         </div>\n\n\n//       </form>\n\n\n\n//       <div>\n//           Search: <input onChange={search_everything}/>\n//       </div>\n\n\n//       <h2>\n//         Numbers\n//       </h2>\n\n//       <div>\n\n\n//       {content.map((person,id) => <Display key = {id} name = {person.name} number = {person.number}/>)}\n\n\n//       </div>\n//     </div>\n//   )\n\n// }\n// export default App\n\n\n\nimport { useState,useEffect } from \"react\";\nimport Display from \"./components/Display.js\"\nimport axios from \"axios\";\nimport person_function1 from \"./services/person_function1.js\";\n\nconst Filter = ({persons,search_content,set_new_search}) =>{\n\n\n\n\n\n   const search_everything  = (event) =>{\n\n    set_new_search(event.target.value)\n\n  }\n\n\n  const content = persons.filter((person) => person.name.toLowerCase().includes(search_content.toLowerCase()))\n\n  const empty_content = []\n\n  const final_content = (search_content ===\"\")?  empty_content :content\n\n  return(\n    <div>\n\n      <div>\n          Search: <input onChange={search_everything}/>\n      </div>\n\n\n\n\n      {final_content.map((person,id) => <Display key = {id} name = {person.name} number = {person.number}/>)}\n    </div>\n  )\n\n}\n\nconst PersonForm = ({persons,setPersons,newName,setNewName,new_number,set_new_number,search_content}) =>{\n\n  const sub_eve = (event)=>{\n\n    event.preventDefault()\n\n\n    const  middle_array = persons.map(person => Object.values(person))\n    const copy_name = newName\n\n    for(let i = 0; i<persons.length;i++){\n    if (middle_array[i][0] === copy_name){\n      alert( newName + \"  is already added to phonebook\")\n      setNewName(\" \")\n      set_new_number(\" \")\n      return 0\n      }\n    }\n\n    const new_value = {\n      name : newName,\n      number : new_number\n    }\n\n\n\n    person_function1.create(new_value).then(\n        return_person =>{\n          setPersons(persons.concat(return_person))\n          setNewName(\" \")\n          set_new_number(\" \")\n        }\n\n\n    )\n\n    // setNewName(\" \")\n    // set_new_number(\" \")\n\n  }\n\n\n  const change_holder = (event) =>{\n\n    console.log(\"1111\", event.target.value)\n\n    setNewName(event.target.value)\n\n  }\n\n  const change_number = (event) =>{\n    console.log(event.target.value)\n    set_new_number(event.target.value)\n  }\n\n    return(\n      <div>\n      <form onSubmit={sub_eve}>\n        <div>\n          name:    <input  onChange={change_holder}/>\n        </div>\n\n        <div>\n          number:  <input onChange={change_number}/>\n        </div>\n\n\n\n        <div>\n          <button type = \"submit\">\n              add\n          </button>\n        </div>\n\n\n      </form>\n      </div>\n\n    )\n\n\n\n}\n\nconst App = () =>{\n  const [persons, setPersons] = useState ([ {name : \"Arto Helllas\", number : \"0352-5103510\", id : 1},{name: \"LI Hua\", number : \"+86-13992381274\", id : 2} ])\n\n  const [newName,setNewName] = useState(\"\")\n\n  const [new_number, set_new_number] =useState(\"\")\n\n\n  const [search_content, set_new_search] = useState(\"\")\n\n\n\nuseEffect(() =>{\n  person_function1.get_all().then(initial_person =>{\n    setPersons(initial_person)\n  })\n\n\n},[])\n\n  return(\n    <div>\n      <h2>\n        Phonebook\n      </h2>\n\n\n      <p>\n        Note: please enter a name:\n      </p>\n\n\n      <Filter persons={persons} search_content={search_content} set_new_search={set_new_search}/>\n\n\n      <h2>\n        Add a New:\n      </h2>\n\n      <div>\n\n\n        <PersonForm persons = {persons}\n\n          setPersons = {setPersons}\n\n          newName = {newName}\n\n          setNewName  = {setNewName}\n\n          new_number = {new_number}\n\n          set_new_number = {set_new_number}\n\n          search_content = {search_content}/>\n\n\n\n      </div>\n\n\n\n\n      <h2>\n        Total person:\n      </h2>\n\n      {persons.map((person,id) =><Display name = {person.name} number = {person.number} key = {id}/> )}\n\n\n\n    </div>\n  )\n\n}\nexport default App"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAKA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;;AAKA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAGA;;AAGA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAGA;;AAKA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;;AAIA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;;AAIA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}